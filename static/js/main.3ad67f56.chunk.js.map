{"version":3,"sources":["components/info-item/InfoItem.js","components/profile/Profile.js","components/search/Search.js","components/loader/Loader.js","components/app/App.js","lib/api.js","lib/hooks/useFetch.js","index.js"],"names":["InfoItem","title","data","className","Profile","user","id","name","style","fontSize","fontWeight","src","avatar_url","alt","bio","followers","following","location","created_at","split","updated_at","Search","onChange","searchProfile","placeholder","onClick","Loader","role","apiClient","apiOrigin","url","a","options","startsWith","R","headers","body","JSON","stringify","fetch","resp","get","includes","json","Error","fetchJSON","makeApiClient","App","useState","username","setUsername","startUrl","setUrl","setData","loading","setLoading","error","setError","useEffect","then","catch","useFetch","e","target","value","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ad67f56.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction InfoItem({title, data}) {\r\n  return <div className='info'>\r\n    <span className='badge badge-primary mr-1'>{title}</span> \r\n    <span className={`badge ${data ? 'badge-secondary' : 'badge-warning'}`}>\r\n      {data || 'This information is missing'}\r\n    </span>\r\n  </div>\r\n}\r\n\r\nexport default InfoItem","import React from 'react'\r\nimport InfoItem from '../info-item/InfoItem'\r\n\r\nfunction Profile({user}){\r\n  return !user.id ? <div className='mt-3' style={{fontSize: '19px', fontWeight:'bold'}}>User not found {'=('}</div> : \r\n  <div className='profile mt-3'>\r\n    {user.name === 'Andrey_V' ? <div style={{fontSize:'11px', fontWeight: 'bold'}}>*Example</div> : ''}\r\n    <img src={user.avatar_url} alt='gitHub profile pic'/>\r\n    <InfoItem title='Name: ' data={user.name} />\r\n    <InfoItem title='Bio: ' data={user.bio} />\r\n    <InfoItem title='Followers: ' data={user.followers} />\r\n    <InfoItem title='Following: ' data={user.following} />\r\n    <InfoItem title='Location: ' data={user.location} />\r\n    <InfoItem title='Created: ' data={user.created_at.split('T')[0]} />\r\n    <InfoItem title='Last update: ' data={user.updated_at.split('T')[0]} />\r\n  </div> \r\n}\r\n\r\nexport default Profile\r\n\r\n","import React from 'react'\r\n\r\nfunction Search({onChange, searchProfile}){\r\n  return <div className='search'>\r\n  <input className='mr-1' placeholder='input username here...' onChange={onChange}/>\r\n  <button className='btn btn-outline-primary btn-sm' onClick={searchProfile}>\r\n    <i className='fa fa-search' />\r\n  </button>\r\n</div>\r\n}\r\n\r\nexport default Search\r\n\r\n","import React from 'react'\r\n\r\nfunction Loader() {\r\n  return <div className='spinner-border text-primary mt-3' role='status'>\r\n    <span className='sr-only'>Loading...</span>\r\n  </div>\r\n}\r\n\r\nexport default Loader","import React, {useState} from 'react'\nimport {makeApiClient} from '../../lib/api'\nimport {useFetch} from '../../lib/hooks/useFetch'\nimport Profile from '../profile/Profile'\nimport Search from '../search/Search'\nimport Loader from '../loader/Loader'\nimport './App.css'\n\nconst apiClient = makeApiClient('https://api.github.com')\n\nfunction App() {\n  const [username, setUsername] = useState('AndreyVozniuk')\n  const {data: user, loading, error, setUrl} = useFetch(apiClient, `/users/${username}`)\n\n  if(error){\n    return <div>{error}</div>\n  }\n\n  function onChange(e) {\n    setUsername(e.target.value)\n  }\n\n  function searchProfile(){\n    setUrl('/users/' + username.trim())\n  }\n\n  return (\n    <div className='App p-3'>\n      <h1>GitHub profile finder</h1>\n      <Search onChange={onChange} searchProfile={searchProfile}/>\n      {loading ? <Loader /> : <Profile user={user} />}\n    </div>\n  )\n}\n\nexport default App\n","import * as R from 'ramda'\r\n\r\nexport function makeApiClient(apiOrigin) {\r\n  async function fetchJSON(url, options = {}) {\r\n    if (!url.startsWith('http')) {\r\n      url = apiOrigin + url\r\n    }\r\n    options = R.mergeDeepRight(options, {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(options.body),\r\n    })\r\n    let resp = await fetch(url, options)\r\n    if ((resp.headers.get('content-type') || '').includes('application/json')) {\r\n      try {\r\n        return resp.json()\r\n      } catch (err) {\r\n        throw new Error(`API: Invalid JSON`)\r\n      }\r\n    } else {\r\n      throw new Error(`API: Invalid mime-type`)\r\n    }\r\n  }\r\n  return {\r\n    fetchJSON,\r\n  }\r\n}","import {useState, useEffect} from 'react'\r\n\r\nexport function useFetch(apiClient, startUrl) { \r\n  let [url, setUrl] = useState(startUrl)\r\n  let [data, setData] = useState(null)\r\n  let [loading, setLoading] = useState(true)\r\n  let [error, setError] = useState(null)\r\n\r\n  useEffect( () => {\r\n    setLoading(true)\r\n    apiClient.fetchJSON(url)\r\n    .then(user => {\r\n      setData(user)\r\n      setLoading(false)\r\n    })\r\n    .catch(setError)\r\n  }, [url])\r\n\r\n  return {data, loading, error, setUrl}\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}